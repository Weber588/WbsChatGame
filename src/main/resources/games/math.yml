math:
  # Configure how many points each operator is worth when calculating the points for a question.
  # When defining points, use %val1% and %val2% to represent the numbers used in that operation.
  # val1 is the value on the left, and val2 on the right (so with subtraction, it's always val1 - val2).
  # Points are rounded to the nearest integer.
  operators:
    # ^
    exponentiation:
      # How many points should the ^ operator be worth?
      points: "%val2% + (%val1% / 4)"

      # All conditions in this list must be true to be worth any points
      points-conditions:
        - "abs(%val1%) > 4"
        - "abs(%val2%) > 2"

    # *
    multiplication:
      points: "log(%val1% * %val2%)"

      points-conditions:
        - "abs(%val1%) + abs(%val2%) > 10"

    # /
    division:
      points: 1
      points-conditions:
        - "%val1% % %val2% > 0"

    # %
    modulo:
      points: 1
      points-conditions:
        - "abs(%val1%) > %val2%"
        - "abs(%val1% - %val2%) > 3"

    # +
    addition:
      points: 1
      points-conditions:
        - "abs(%val1%) > 100"
        - "abs(%val2%) > 100"

    # -
    subtraction:
      points: 1
      points-conditions:
        - "%val2% > %val1%"
        - "abs(%val2%) > 25"

  # Configure how many points each function is worth when calculating the points for a question.
  # When defining points, use %val% to represent the number inside the function.
  # Points are rounded to the nearest integer.
  functions:
    # Absolute value function
    abs:
      points: 0

    # Log base 10 function
    log:
      points: "log(%val%)"
      points-conditions:
        - "log(%val%) % 10 != 0"


  # The chance to use a challenge instead of a normal game.
  # 0 = never use challenges, 100 = always use challenges
  challenge-chance: 0

  challenges:
    # Chance that the game will require the player to provide their answer
    # in roman numerals.
    # Will not run when the answer is greater than 3999.
    roman_numerals_answer: 33

    # Chance that numbers in the equation will be displayed as roman numerals.
    # Does not affect worded equations.
    roman_numerals_question: 33

    # Chance that numbers in the equation will be displayed as roman numerals,
    # AND the player will be required to answer in roman numerals.
    # Does not affect worded equations.
    roman_numerals: 33

  # List equation generators here
  generators:
    simple_random: # Names must be unique

      # How likely should this equation be to appear?
      chance: 50

      # Numbers are specified by a min and max.
      # See next section for non-number usages.
      variables:
        a:
          min: 2
          max: 9
        b:
          min: 2
          max: 9
        c:
          min: 2
          max: 9

      # This defines which operators can replace question marks (?) in the equation.
      random-operators:
        - '+'
        - '-'
        - '*'

      # Write out the equation to use here!
      # It can contain numbers, variables, and operators.
      # Variables are surrounded by % signs from the 'variables' section.
      equation: '%a% ? %b% ? %c%'

    # You can make worded math using a template as well as an equation.
    worded_simple:
      chance: 5

      # Variables are used for numbers and for flavour strings.
      variables:
        a:
          min: 2
          max: 64
        # You can list strings and a random one will be used.
        material:
          - 'Coal'
          - 'Copper'
          - 'Iron'
          - 'Gold'
          - 'Redstone'

      # By specifying a template, you hide the real equation and show a fake one.
      # The equation field is still required to calculate the actual answer.
      template: 'If you have &h%a% %material%&r, how many &h%material% Blocks&r can you craft?'

      equation: '(%a% - (%a% % 9)) / 9'

    longer_math:
      chance: 15

      variables:
        a:
          min: 2
          max: 9
        b:
          min: 2
          max: 9
        c:
          min: 2
          max: 9
        d:
          min: 2
          max: 9

      random-operators:
        - '+'
        - '-'
        - '*'

      equation: '%a% ? %b% ? %c% ? %d%'

    big_addition:
      chance: 10

      variables:
        a:
          min: 10
          max: 99
        b:
          min: 10
          max: 99

      equation: '%a% + %b%'

    complex_small:
      chance: 20

      variables:
        # Variables are processed top to bottom, so you can use variables from lower in the list
        # with string list variables! Random operators (?) are processed after all variables are filled.
        extra_calc:
          - ' ? %a%'
          - ' ? %b%'
          - ' ? %c%'
          - ''
        extra_calc2:
          - ' ? %d%'
          - ''
          - ''
          - ''
        a:
          min: 3
          max: 9
        b:
          min: 3
          max: 9
        c:
          min: 3
          max: 9
        d:
          min: 3
          max: 9

      random-operators:
        - '+'
        - '-'
        - '*'

      equation: '%a% ? %b% ? %c%%extra_calc%%extra_calc2%'